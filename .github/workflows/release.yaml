name: Build & Release

on:
  push:
    tags:
      - 'v*.*'
  workflow_dispatch:
    inputs:
      release:
        description: 'Required version Tag'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-gnu]

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install dependencies
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: sudo apt-get update && sudo apt-get install -y gcc-mingw-w64 zip

      - run: rustup target add ${{ matrix.target }}

      - name: Update Cargo.toml version
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release != '' }}
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ github.event.inputs.release }}\"/" Cargo.toml
          git add Cargo.toml
          git commit -m "Bump version to ${{ github.event.inputs.release }}"
          git tag "v${{ github.event.inputs.release }}"
          git push origin HEAD
          git push origin "v${{ github.event.inputs.release }}"

      - run: cargo build --release --target ${{ matrix.target }}

      - run: |
          mkdir -p release
          if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-gnu" ]]; then
            EXE_NAME=ss_crusty
            ZIP_NAME=ss_crusty-linux-x86_64.zip
          else
            EXE_NAME=ss_crusty.exe
            ZIP_NAME=ss_crusty-windows-x86_64.zip
          fi
          cp target/${{ matrix.target }}/release/$EXE_NAME release/
          cp README.md release/
          zip -r release/$ZIP_NAME release/*

      - name: Install GitHub CLI
        run: sudo apt update && sudo apt install -y gh

      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh auth login --with-token <<< "$GITHUB_TOKEN"
          gh release create "${GITHUB_REF_NAME}" release/*.zip --title "Release ${GITHUB_REF_NAME}" --notes "Automated release"
