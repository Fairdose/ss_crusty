name: Build & Release

on:
  push:
    tags:
      - 'v*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-gnu]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install dependencies for Windows target
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: sudo apt-get update && sudo apt-get install -y gcc-mingw-w64

      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Build release
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare ZIP
        run: |
          mkdir -p release
          if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-gnu" ]]; then
            EXE_NAME=ss_crusty
            ZIP_NAME=ss_crusty-linux-x86_64.zip
          else
            EXE_NAME=ss_crusty.exe
            ZIP_NAME=ss_crusty-windows-x86_64.zip
          fi
          cp target/${{ matrix.target }}/release/$EXE_NAME release/
          cp README.md release/
          zip -r release/$ZIP_NAME release/*

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: release/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
